"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.routes = void 0;
const express_1 = __importDefault(require("express"));
const auth_controller_1 = require("./controller/auth.controller");
const classification_controller_1 = require("./controller/classification.controller");
const c_expenses_controller_1 = require("./controller/c_expenses.controller");
const c_week_controller_1 = require("./controller/c_week.controller");
const image_controller_1 = require("./controller/image.controller");
const order_controller_1 = require("./controller/order.controller");
const permission_controller_1 = require("./controller/permission.controller");
const product_controller_1 = require("./controller/product.controller");
const role_controller_1 = require("./controller/role.controller");
const tx_type_controller_1 = require("./controller/tx_type.controller");
const user_controller_1 = require("./controller/user.controller");
const auth_middleware_1 = require("./middleware/auth.middleware");
const permission_middleware_1 = require("./middleware/permission.middleware");
const routes = (router) => {
    router.post('/api/register', auth_controller_1.Register);
    router.post('/api/login', auth_controller_1.Login);
    router.get('/api/user', auth_middleware_1.AuthMiddleware, auth_controller_1.AuthenticatedUser);
    router.post('/api/logout', auth_middleware_1.AuthMiddleware, auth_controller_1.Logout);
    router.put('/api/users/info', auth_middleware_1.AuthMiddleware, auth_controller_1.UpdateInfo);
    router.put('/api/users/password', auth_middleware_1.AuthMiddleware, auth_controller_1.UpdatePassword);
    router.get('/api/users', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('users'), user_controller_1.Users);
    router.post('/api/users', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('users'), user_controller_1.CreateUser);
    router.get('/api/users/:id_person', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('users'), user_controller_1.GetUser);
    router.put('/api/users/:id_person', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('users'), user_controller_1.UpdateUser);
    router.delete('/api/users/:id_person', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('users'), user_controller_1.DeleteUser);
    router.get('/api/permissions', auth_middleware_1.AuthMiddleware, permission_controller_1.Permissions);
    router.get('/api/classifications', auth_middleware_1.AuthMiddleware, classification_controller_1.Classifications);
    router.get('/api/tx_types', auth_middleware_1.AuthMiddleware, tx_type_controller_1.Tx_types);
    router.get('/api/c_weeks', auth_middleware_1.AuthMiddleware, c_week_controller_1.C_weeks);
    router.get('/api/roles', auth_middleware_1.AuthMiddleware, role_controller_1.Roles);
    router.post('/api/roles', auth_middleware_1.AuthMiddleware, role_controller_1.CreateRole);
    router.get('/api/roles/:id_role', auth_middleware_1.AuthMiddleware, role_controller_1.GetRole);
    router.put('/api/roles/:id_role', auth_middleware_1.AuthMiddleware, role_controller_1.UpdateRole);
    router.delete('/api/roles/:id_role', auth_middleware_1.AuthMiddleware, role_controller_1.DeleteRole);
    router.get('/api/products', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('products'), product_controller_1.Products);
    router.post('/api/products', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('products'), product_controller_1.CreateProduct);
    router.get('/api/products/:id_product', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('products'), product_controller_1.GetProduct);
    router.put('/api/products/:id_product', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('products'), product_controller_1.UpdateProduct);
    router.delete('/api/products/:id_product', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('products'), product_controller_1.DeleteProduct);
    router.get('/api/expenses', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('expenses'), c_expenses_controller_1.Expenses);
    router.post('/api/expenses', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('expenses'), c_expenses_controller_1.CreateExpense);
    router.get('/api/expenses/:id_expenses', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('expenses'), c_expenses_controller_1.GetExpense);
    router.put('/api/expenses/:id_expenses', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('expenses'), c_expenses_controller_1.UpdateExpense);
    router.delete('/api/expenses/:id_expenses', auth_middleware_1.AuthMiddleware, (0, permission_middleware_1.PermissionMiddleware)('expenses'), c_expenses_controller_1.DeleteExpense);
    router.post('/api/upload', auth_middleware_1.AuthMiddleware, image_controller_1.Upload);
    router.use('/api/uploads', express_1.default.static('./uploads'));
    router.get('/api/orders', auth_middleware_1.AuthMiddleware, order_controller_1.Orders);
    router.post('/api/export', auth_middleware_1.AuthMiddleware, order_controller_1.Export);
    router.get('/api/chart', auth_middleware_1.AuthMiddleware, order_controller_1.Chart);
    router.get('/api/chartSaving', auth_middleware_1.AuthMiddleware, order_controller_1.ChartSavings);
    router.get('/api/chartSavingR', auth_middleware_1.AuthMiddleware, order_controller_1.ChartSavingsR);
    router.get('/api/chartCurrentDebt', auth_middleware_1.AuthMiddleware, order_controller_1.ChartCurrentDebt);
    router.get('/api/chartInitialDebt', auth_middleware_1.AuthMiddleware, order_controller_1.ChartInitialDebt);
    router.get('/api/chartIncomesW', auth_middleware_1.AuthMiddleware, order_controller_1.ChartIncomesW);
    router.get('/api/chartOutcomesW', auth_middleware_1.AuthMiddleware, order_controller_1.ChartOutcomesW);
    router.get('/api/chartBank', auth_middleware_1.AuthMiddleware, order_controller_1.ChartBank);
    router.get('/api/chartDebts', auth_middleware_1.AuthMiddleware, order_controller_1.ChartDebts);
    router.get('/api/chartExpDet', auth_middleware_1.AuthMiddleware, order_controller_1.ChartExpDet);
    router.get('/api/chartKindExp', auth_middleware_1.AuthMiddleware, order_controller_1.ChartKindExp);
    router.get('/api/chartKindExp1', auth_middleware_1.AuthMiddleware, order_controller_1.ChartKindExp1);
    router.get('/api/chartStateDebt', auth_middleware_1.AuthMiddleware, order_controller_1.ChartStateDebt);
    router.get('/api/chartIncomesJ', auth_middleware_1.AuthMiddleware, order_controller_1.ChartIncomesJose);
    router.get('/api/chartSIncomesP', auth_middleware_1.AuthMiddleware, order_controller_1.ChartIncomesPaola);
    router.get('/api/chartWeek', auth_middleware_1.AuthMiddleware, order_controller_1.ChartWeek);
};
exports.routes = routes;
